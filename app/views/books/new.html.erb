<h2>Donate a Book!</h2>

<%= form_with(model: [@library, @book]) do |f| %>

  <% if @book.errors.any? %>
      <% @book.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
  <% end %>
  <% else %>
  <p>
    <%= f.label :title %>
    <%= f.text_field :title %>
  </p>
  <%= f.fields_for :author, @author do |ff| %>
    <p>
      <%= ff.label "Author's first name" %>
      <%= ff.text_field :first_name %><br>
    </p>
    <p>
      <%= ff.label "Author's last name" %>
      <%= ff.text_field :last_name %><br>
    </p>
  <% end %>
    <p>
    <%= f.label :genre %>
    <%= f.collection_select :genre_id, Genre.all, :id, :name %>
    </p>
  <%= f.submit %>
<% end %><br>

<div id="postResult">
<h2 id="donationMessage"></h2>
<h3 id="bookTitle"></h3>
<h3 id="bookAuthorName"></h3>
<h3 id="genreName"></h3>
<h4 id="catalogLink"></h4>
</div>

<script type="text/javascript">

  $(function(){
   $("form").submit(function(event) {
      event.preventDefault();

      let values = $(this).serialize();

      var creation = $.post("/libraries/<%= @library.id %>/books", values);

      creation.done(function(data){
        console.log(data)
        let book = data;
        $("#donationMessage").text("Thank you for your donation. You have donated: ")
        $("#bookTitle").text("Book Title:" + " " + book["title"]);
        $("#bookAuthorName").text("Author Name:" + " " + book["author"]["first_name"] + " " + book["author"]["last_name"])
        $("#genreName").text("Genre:" + " " + book["genre"]["name"])
        // $("#catalogLink").text("Return to "  + <%= link_to "catalog", library_books_path %>)
    });
  });
})
</script>

<!-- 3. Must intercept a form to create a resource and render the response without a page refresh. For example, a user might be able to add a comment to a post, and submit it via an AJAX POST request, with the response being the new object in JSON. The new record would then be formatted with OO JS and appended to the DOM.
 -->
